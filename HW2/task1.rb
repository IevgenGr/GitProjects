Задание 1. Есть массив [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336] , сохранить массив в переменную и проделать с ней следующее (должен выводиться результат, но сам массив не менять):
– узнать количество элементов в массиве;
– перевернуть массив;
– найти наибольшее число;
– найти наименьшее число;
– отсортировать от меньшего к большему;
– отсортировать от большего к меньшему;
– удалить все нечетные числа;
– оставить только те числа, которые без остатка делятся на 3;
– удалить из массива числа, которые повторяются (то есть, нужно вывести массив, в котором нет повторов);
– разделить каждый элемент на 10, в результате элементы не должны быть округлены до целого;
– получить новый массив, который бы содержал в себе те буквы английского алфавита, порядковый номер которых есть в нашем массиве;
– поменять местами минимальный и максимальный элементы массива;
– найти элементы, которые находятся перед минимальным числом в массиве;
– необходимо найти три наименьших элемента.

В том же репозитории, что и в первой домашке (RubyHW) создать папку HW2
Первое задание поместить в файл task1.rb. Первой строкой должно идти присвоение массива выше к переменной array. Каждая новая операция с новой строки. Опционально попробуйте сделать все задачки в одну строку. 

array=[621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p array.count
p array.reverse
p array.max
p array.min
p array.sort
p array.sort { |a, b| b <=> a }
p array.delete_if {|el| el.odd?}
p array.select { |el| el % 3 == 0 }
p array.uniq 
p array.map { |el| el.to_f / 10 }
p array.map { |el| ((el+9).to_s(36)).length<2 ? (el+9).to_s(36) : nil }.compact
[array.min, array.max]=[array.max, array.min] 

p array.min(3)
